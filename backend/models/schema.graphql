# import * from '../generated/prisma.graphql'

type SuccessMessage {
  message: String
}

type LikeWithIdOnly {
  id: ID!
}

type BlogPostConnectionFiltered {
  pageInfo: PageInfo!
  aggregate: AggregateBlogPost!
}

type Mutation {
  createBlogPost(title: String!, body: String!): BlogPost!
  createLike(blogPost: ID!): LikeWithIdOnly!
  updateBlogPost(id: ID!, title: String!, body: String!): BlogPost!
  deleteLike(id: ID!): LikeWithIdOnly
  deleteBlogPost(id: ID!): BlogPost
  login(email: String!, password: String!): User!
  logout: SuccessMessage
  signup(email: String!, password: String!, name: String!): User!
}

type Query {
  blogPosts(
    where: BlogPostWhereInput
    orderBy: BlogPostOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [BlogPost]!
  blogPostsConnection(where: BlogPostWhereInput): BlogPostConnectionFiltered!
  likes(
    where: LikeWhereInput
    orderBy: LikeOrderByInput
    skip: Int
    after: String
    before: String
    first: Int
    last: Int
  ): [Like]!
  me: User
  blogPost(where: BlogPostWhereUniqueInput!): BlogPost
}
